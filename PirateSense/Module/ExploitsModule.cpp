// PirateSense.

#include "ExploitsModule.h"

#include <ThirdParty/XORSTR.h>

#include "Config.h"
#include "PirateSense.h"

ExploitsModule::ExploitsModule()
{
    ModuleName = xorstr_(L"Exploits Module");
}

void ExploitsModule::Update()
{
    if (!PirateSense::LocalPlayerActor)
    {
        return;
    }

    UClimbingComponent* ClimbingComponent = PirateSense::LocalPlayerActor->ClimbingComponent;
    if (ClimbingComponent && ClimbingComponent->GetIsCurrentlyClimbing() && Config.Exploits.InstantLadder.bEnable)
    {
        if (GetAsyncKeyState(0x57)) // W
        {
            ClimbingComponent->ServerHeight = 9999.f;
        }
        if (GetAsyncKeyState(0x53)) // S
        {
            ClimbingComponent->ServerHeight = 0.f;
        }
    }

	// if (UAthenaCharacterMovementComponent* MovementComponent = PirateSense::LocalPlayerActor->AthenaCharacterMovementComponent)
	// {
	// 	MovementComponent->SwimParams.EnterSwimmingDepth = Config.Exploits.UnderwaterWalk.bEnable ? 500000.f : 120.f;
	// 	MovementComponent->SwimParams.ExitSwimmingDepth = Config.Exploits.UnderwaterWalk.bEnable ? 500000.f : 120.f;
	// 	//MovementComponent->SwimParams.UnderwaterSwimDepth = Config.Exploits.UnderwaterWalk.bEnable ? 500000.f : 1000.f;
	// 	//MovementComponent->SwimParams.SurfaceSwimDepth = Config.Exploits.UnderwaterWalk.bEnable ? 500000.f : 1000.f;
	// 	//MovementComponent->SwimParams.SurfaceSwimExitDepth = Config.Exploits.UnderwaterWalk.bEnable ? 500000.f : 1000.f;
	// 	//MovementComponent->SwimParams.MaxSwimDepth = Config.Exploits.UnderwaterWalk.bEnable ? 500000.f : 1000.f;
	// }
}

void ExploitsModule::RenderMenu()
{
    if (ImGui::BeginTabItem(xorstr_("Exploits")))
    {
        ImGui::Text(xorstr_("Exploits"));

        ImGui::Columns(3, xorstr_("ExploitsCol"), false);
        ImGui::Text(xorstr_("Exploits"));
        if (ImGui::BeginChild(xorstr_("Exploits"), ImVec2(0.f, 0.f), true, 0))
        {
            ImGui::Checkbox(xorstr_("Instant Ladder"), &Config.Exploits.InstantLadder.bEnable);

            ImGui::Checkbox(xorstr_("Underwater Walk"), &Config.Exploits.UnderwaterWalk.bEnable);

            ImGui::Checkbox(xorstr_("Fast Sword"), &Config.Misc.Sword.bFastSword);
            ImGui::Checkbox(xorstr_("No Clamp"), &Config.Misc.Sword.bNoClamp);
						
            // if (ImGui::Button(xorstr_("Suicide")))
            // {
            // 	if (PirateSense::LocalPlayerActor)
            // 	{
            // 		PirateSense::LocalPlayerActor->Kill(static_cast<char>(ECharacterDeathType::Killed));
            // 	}
            // }
            
            // if (ImGui::Button(xorstr_("Air Control")))
            // {
            // 	if (PirateSense::LocalPlayerActor && PirateSense::LocalPlayerActor->AthenaCharacterMovementComponent)
            // 	{
            // 		PirateSense::LocalPlayerActor->AthenaCharacterMovementComponent->AirControl = 1.f;
            // 	}
            // }
        }
        ImGui::EndChild();

        ImGui::Columns();
        ImGui::EndTabItem();
    }
}
